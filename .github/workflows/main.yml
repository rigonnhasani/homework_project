name: CI/CD Pipeline with Email Notification

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write  # âœ… Allow publishing to GHCR

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
     
      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Set up Docker image variables
        env:
          IMAGE_NAME: ghcr.io/rigonnhasani/actions-runner-controller
        run: echo "IMAGE_TAG=${IMAGE_NAME}:${{ github.sha }}" >> $GITHUB_ENV

      - name: Build and tag Docker image
        run: |
          docker build -t $IMAGE_TAG .
          docker tag $IMAGE_TAG $IMAGE_NAME

      - name: Push Docker image to GHCR
        run: |
          docker push $IMAGE_TAG
          docker push $IMAGE_NAME

      - name: Send Email Notification
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "CI/CD Pipeline Status: ${{ job.status }}"
          body: |
            Hello,
          
            The CI/CD pipeline has completed with the following status: **${{ job.status }}**.

            - Repository: ${{ github.repository }}
            - Branch: ${{ github.ref }}
            - Commit: ${{ github.sha }}
            - Docker Image: `ghcr.io/rigonnhasani/actions-runner-controller:latest`
            - Versioned Tag: `ghcr.io/rigonnhasani/actions-runner-controller:${{ github.sha }}`

            **Action Required:**
            - If the status is `success`, the latest Docker image has been pushed to GHCR successfully. ðŸŽ‰
            - If the status is `failure`, please check the GitHub Actions logs for errors.

            Best,
            CI/CD Bot ðŸ¤–
          to: ${{ secrets.EMAIL_TO }}
          from: ${{ secrets.EMAIL_FROM }}
